{"version":3,"sources":["utils.js","Overlay.jsx","Countdown.jsx","EditEvent.jsx","App.jsx","index.js"],"names":["isValidNumberInput","e","isNaN","parseInt","key","preventDefault","parseInputAsNumber","val","hourMinuteToSeconds","h","m","Overlay","state","visible","toggleVisible","bind","this","setState","prevState","overlayClass","className","onClick","props","children","Component","Countdown","diff","hour","minute","timeNow","seconds","diffText","s","Math","floor","toString","padStart","secondsToHourMinuteSecond","name","onEditInit","id","onRemove","EditEvent","isFormValid","length","isValidHour","isValidMinute","isFormEmpty","htmlFor","type","value","onChange","onInputChange","target","onKeyPress","disabled","onSave","onCancel","App","now","Date","getHours","getMinutes","getSeconds","events","editedEvent","uniqid","handleEditEvent","handleSaveEvent","handleRemoveEvent","handleEditInit","handleEditCancel","timer","storateEvents","JSON","parse","localStorage","getItem","intervalId","setInterval","Object","assign","find","el","map","setItem","stringify","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8d9e8ea7.chunk.js","sourcesContent":["export function isValidNumberInput(e) {\n    if(isNaN(parseInt(e.key, 10)) === true) return e.preventDefault();\n    return true;\n}\n\nexport function parseInputAsNumber(val) {\n    if(val === \"\") return -1;\n    return parseInt(val, 10);\n}\n\nexport function isValidName(val) {\n    if(val.length > 0) return true;\n    return false;\n}\n\nexport function isValidHour(val) {\n    if(val >= 0 && val <= 23) return true;\n    return false;\n}\n\nexport function isValidMinute(val) {\n    if(val >= 0 && val <= 59) return true;\n    return false;\n}\n\nexport function hourMinuteToSeconds(h, m) {\n    return h * 3600 + m * 60;\n}\n\nexport function secondsToHourMinuteSecond(s) {\n    let seconds = s;\n    const hour = Math.floor(seconds / 3600).toString().padStart(2, 0);\n    seconds -= hour * 3600;\n    const minute = Math.floor(seconds / 60).toString().padStart(2, 0);\n    seconds -= minute * 60;\n    seconds = seconds.toString().padStart(2, 0);\n    return `${hour}:${minute}:${seconds}`;\n}","import React, { Component } from 'react';\nimport \"./Overlay.css\";\n\nclass Overlay extends Component {\n    constructor() {\n        super();\n        this.state = {\n            visible: false\n        }\n\n        this.toggleVisible = this.toggleVisible.bind(this);\n    }\n\n    toggleVisible() {\n        this.setState(prevState => {\n            return {\n                visible: !prevState.visible\n            }\n        })\n    }\n\n    render() {\n\n        const overlayClass = this.state.visible === true\n        ? \"overlay__modal overlay__modal--visible\"\n            : \"overlay__modal\";\n\n        return (\n            <div className=\"overlay\">\n                <span onClick={() => this.toggleVisible()}>info</span>\n                <div className={overlayClass}>\n                    <span className=\"overlay__close\"  onClick={() => this.toggleVisible()}>close</span>\n                    {this.props.children}\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default Overlay;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport \"./Countdown.css\";\nimport \"./../node_modules/semantic-ui-css/semantic.css\"\nimport { hourMinuteToSeconds, secondsToHourMinuteSecond} from \"./utils\";\nimport Overlay from \"./Overlay\";\n\n\nconst Countdown = (props) => {\n    const eventInSeconds = hourMinuteToSeconds(props.hour, props.minute);\n    const nowInSeconds = hourMinuteToSeconds(props.timeNow.hour, props.timeNow.minute) + props.timeNow.seconds;\n\n    const diff = (eventInSeconds - nowInSeconds);\n    const diffText = diff > 0 ? secondsToHourMinuteSecond(diff) : \"tomorrow\";\n\n    return (\n    <div className=\"countdown\">\n        <strong>{props.name}</strong> - {diffText}\n        <div className=\"countdown__icons\">\n            <i className=\"icon edit\" onClick={() => props.onEditInit(props.id)}></i>\n            <i className=\"icon times\" onClick={() => props.onRemove(props.id)}></i>\n        </div>\n        <Overlay>\n            <h1>{props.name}</h1>\n            <p>{props.hour.toString().padStart(2,0)}:{props.minute.toString().padStart(2, 0)}</p>\n        </Overlay>\n    </div>\n)};\n\nCountdown.propTypes = {\n    name: PropTypes.string,\n    hour: PropTypes.number,\n    minute: PropTypes.number,\n    onEditInit: PropTypes.func,\n    timeNow: PropTypes.shape({\n        hour: PropTypes.number,\n        minute: PropTypes.number,\n        seconds: PropTypes.number\n    }),\n    onRemove: PropTypes.func\n}\n\nexport default Countdown;","import React from \"react\";\nimport \"./EditEvent.css\";\nimport PropTypes from 'prop-types';\nimport {isValidNumberInput, parseInputAsNumber, isValidName, isValidHour, isValidMinute} from \"./utils\";\n\n\nconst EditEvent = props => {\n    const isFormValid =\n        isValidName(props.name) &&\n        isValidHour(props.hour) &&\n        isValidMinute(props.minute);\n\n    const isFormEmpty =\n        props.name === \"\" &&\n        props.hour === -1 &&\n        props.minute === -1;\n\n    return (\n        <div className=\"edit-event\">\n            <div className=\"edit-event__input-group\">\n                <label htmlFor=\"name\">name</label>\n                <input\n                    type=\"text\"\n                    id=\"name\"\n                    name=\"name\"\n                    value={props.name}\n                    onChange={(e) => props.onInputChange({[e.target.name]: e.target.value})}\n                />\n            </div>\n            <div className=\"edit-event__input-group\">\n                <label htmlFor=\"hour\">hour</label>\n                <input\n                    type=\"tel\"\n                    id=\"hour\"\n                    name=\"hour\"\n                    value={props.hour === -1 ? \"\" : props.hour}\n                    onKeyPress={e => isValidNumberInput(e)}\n                    onChange={(e) => props.onInputChange({[e.target.name]: parseInputAsNumber(e.target.value)})}\n                />\n            </div>\n            <div className=\"edit-event__input-group\">\n                <label htmlFor=\"minute\">minute</label>\n                <input\n                    type=\"tel\"\n                    id=\"minute\"\n                    name=\"minute\"\n                    value={props.minute === -1 ? \"\" : props.minute}\n                    onKeyPress={e => isValidNumberInput(e)}\n                    onChange={(e) => props.onInputChange({[e.target.name]: parseInputAsNumber(e.target.value)})}\n                />\n            </div>\n            <button disabled={!isFormValid} onClick={() => props.onSave()}>OK</button>\n            <button disabled={isFormEmpty} onClick={() => props.onCancel()}>Cancel</button>\n        </div>\n    )\n}\n\nEditEvent.propTypes = {\n    name: PropTypes.string,\n    hour: PropTypes.number,\n    minute: PropTypes.number,\n    onInputChange: PropTypes.func,\n    onSave: PropTypes.func,\n    onCancel: PropTypes.func\n}\n\nexport default EditEvent;","import React, {Component} from 'react';\nimport uniqid from 'uniqid';\nimport \"./App.css\";\nimport Countdown from './Countdown';\nimport EditEvent from \"./EditEvent\";\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            now: {\n                hour: new Date().getHours(),\n                minute: new Date().getMinutes(),\n                seconds: new Date().getSeconds(),\n            },\n            events: [],\n            editedEvent: {\n                id: uniqid(),\n                name: \"\",\n                hour: -1,\n                minute: -1\n            }\n        };\n\n        this.handleEditEvent = this.handleEditEvent.bind(this);\n        this.handleSaveEvent = this.handleSaveEvent.bind(this);\n        this.handleRemoveEvent = this.handleRemoveEvent.bind(this);\n        this.handleEditInit = this.handleEditInit.bind(this);\n        this.handleEditCancel = this.handleEditCancel.bind(this);\n        this.timer = this.timer.bind(this);\n    }\n\n    timer() {\n        this.setState({\n            now: {\n                hour: new Date().getHours(),\n                minute: new Date().getMinutes(),\n                seconds: new Date().getSeconds(),\n            }\n        })\n    }\n\n    componentDidMount() {\n        const storateEvents = JSON.parse(localStorage.getItem(\"events\")) || [];\n        this.setState({events: storateEvents});\n        const intervalId = setInterval(this.timer, 1000);\n        this.setState({intervalId: intervalId});\n    }\n\n    handleEditEvent(val) {\n        this.setState(prevState => {\n            return {\n                editedEvent: Object.assign(prevState.editedEvent, val)\n            }\n        })\n    }\n\n    handleSaveEvent() {\n        this.setState(prevState => {\n            const editedEventExists = prevState.events.find( el => el.id === prevState.editedEvent.id);\n\n            let updatedEvents;\n            if(editedEventExists){\n                updatedEvents = prevState.events.map(el => {\n                    if (el.id === prevState.editedEvent.id) return prevState.editedEvent;\n                    else return el;\n                })\n            } else {\n                updatedEvents = [...prevState.events, prevState.editedEvent]\n            }\n\n            return {\n                events: updatedEvents,\n                editedEvent: {id: uniqid(), name: \"\", hour: -1, minute: -1}\n            }\n        }, () => {\n            localStorage.setItem(\"events\", JSON.stringify(this.state.events))\n        });\n\n    }\n\n    handleRemoveEvent(id) {\n        this.setState(prevState => ({\n            events: prevState.events.filter(el => el.id !== id)\n        }), () => {\n            localStorage.setItem(\"events\", JSON.stringify(this.state.events))\n        })\n    }\n\n    handleEditInit(id) {\n        this.setState(prevState => ({\n            editedEvent: {...prevState.events[id]}\n        }))\n    }\n\n    handleEditCancel(){\n        this.setState({\n            editedEvent: {id: uniqid(), name: \"\", hour: -1, minute: -1}\n        });\n    }\n\n    render() {\n        const events = this.state.events.map(el => {\n            return <Countdown\n                key={el.id}\n                id={el.id}\n                name={el.name}\n                hour={el.hour}\n                minute={el.minute}\n                timeNow={this.state.now}\n                onRemove={id => this.handleRemoveEvent(id)}\n                onEditInit={id => this.handleEditInit(id)}\n            />\n        });\n        return (\n            <div className=\"app\">\n                {events}\n                <EditEvent\n                    name={this.state.editedEvent.name}\n                    hour={this.state.editedEvent.hour}\n                    minute={this.state.editedEvent.minute}\n                    onInputChange={val => this.handleEditEvent(val)}\n                    onSave={() => this.handleSaveEvent()}\n                    onCancel={() => this.handleEditCancel()}\n                />\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}